<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cuestionario de Cálculo</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="/styles/style.css" rel="stylesheet" type="text/css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/core-js/3.21.1/minified.js"></script>
    <script async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
</head>
<body>

<div class="container my-5">
    <h2 class="text-center" id="questionTitle">Pregunta</h2>
    <form id="quizForm">
        <div id="answers" class="mt-4"></div>
        <button type="submit" class="btn btn-primary mt-3">Siguiente</button>
    </form>
    <button type="button" class="btn btn-info mt-3" data-bs-toggle="modal" data-bs-target="#pistaModal">
        Ver pista
    </button>
    <div id="hint" class="mt-3 text-success"></div>
</div>

<!-- Modal de la Pista -->
<div class="modal fade" id="pistaModal" tabindex="-1" aria-labelledby="pistaModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="pistaModalLabel">Pista</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
      </div>
      <div class="modal-body">
        <p id="pistaTexto">Aquí aparecerá la pista.</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
      </div>
    </div>
  </div>
</div>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>

<script>
    // Obtiene las preguntas del backend mediante Handlebars
    const preguntas = [
        {{#each preguntasf}}
        {
            id: {{this.id}},
            categoria: `{{{this.categoria}}}`.trim().toLowerCase(),
            enunciado: `{{{this.enunciado}}}`,
            correcta: `{{{this.correcta}}}`,
            incorrectas: [`{{{this.incorrecta1}}}`, `{{{this.incorrecta2}}}`, `{{{this.incorrecta3}}}`],
            pista: `{{{this.pista}}}`,
            explicacion: `{{{this.respuesta}}}`
        }{{#unless @last}},{{/unless}}
        {{/each}}
    ];

function obtenerCategoriaSeleccionada() {
    const params = new URLSearchParams(window.location.search);
    let categoria = params.get('categoria');

    console.log("Categoría obtenida de URL:", categoria); // <-- Agregar este log

    if (!categoria) {
        categoria = localStorage.getItem('categoriaSeleccionada');
        console.log("Categoría obtenida de localStorage:", categoria); // <-- Agregar este log
    }

    if (categoria) {
        categoria = categoria.trim().toLowerCase();
        localStorage.setItem('categoriaSeleccionada', categoria);
    }

    return categoria;
}


    const categoriaSeleccionada = obtenerCategoriaSeleccionada();
    console.log("Categoría seleccionada:", categoriaSeleccionada);

    // Filtra preguntas por la categoría seleccionada
    const preguntasFiltradas = preguntas.filter(p => p.categoria === categoriaSeleccionada);
    console.log("Preguntas filtradas:", preguntasFiltradas);

    let currentQuestionIndex = 0;
    let selectedAnswer = null;
    let respuestasUsuario = [];

    function mostrarPregunta() {
        const questionTitle = document.getElementById('questionTitle');
        const answersDiv = document.getElementById('answers');

        if (preguntasFiltradas.length === 0) {
            questionTitle.innerHTML = "No hay preguntas disponibles para esta categoría.";
            answersDiv.innerHTML = '';
            return;
        }

        const preguntaSeleccionada = preguntasFiltradas[currentQuestionIndex];
        questionTitle.innerHTML = preguntaSeleccionada.enunciado;

        // Mezclar respuestas
        const respuestas = [preguntaSeleccionada.correcta, ...preguntaSeleccionada.incorrectas];
        respuestas.sort(() => Math.random() - 0.5);

        answersDiv.innerHTML = '';
        respuestas.forEach(respuesta => {
            const button = document.createElement('button');
            button.className = "btn btn-outline-primary d-block mb-2";
            button.innerHTML = respuesta;
            button.type = "button";

            button.onclick = function() {
                document.querySelectorAll('#answers button').forEach(btn => btn.classList.remove('active'));
                button.classList.add('active');
                selectedAnswer = respuesta;
            };

            answersDiv.appendChild(button);
        });

        // Mostrar la pista de la pregunta actual
        document.getElementById('pistaTexto').innerHTML = preguntaSeleccionada.pista || "No hay pista disponible.";

        // Si MathJax está disponible, renderiza expresiones matemáticas
        if (typeof MathJax !== 'undefined') {
            MathJax.typesetPromise();
        }
    }

    document.getElementById('quizForm').addEventListener('submit', function(e) {
        e.preventDefault();

        if (!selectedAnswer) {
            alert('Por favor, selecciona una respuesta.');
            return;
        }

        const preguntaActual = preguntasFiltradas[currentQuestionIndex];

        respuestasUsuario.push({
            enunciado: preguntaActual.enunciado,
            respuestaSeleccionada: selectedAnswer,
            respuestaCorrecta: preguntaActual.correcta,
            explicacion: preguntaActual.explicacion,
            esCorrecta: selectedAnswer === preguntaActual.correcta
        });

        currentQuestionIndex++;
        if (currentQuestionIndex < preguntasFiltradas.length) {
            selectedAnswer = null;
            mostrarPregunta();
        } else {
            localStorage.setItem('respuestasUsuario', JSON.stringify(respuestasUsuario));
            window.location.href = "/result";
        }
    });

    // Inicia mostrando la primera pregunta
    if (preguntasFiltradas.length > 0) {
        mostrarPregunta();
    }
</script>
</body>
</html>
