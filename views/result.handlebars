<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Resultados</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link href="/styles/styler.css" rel="stylesheet" type="text/css" />

  <!-- MathJax -->
  <script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
  <script id="MathJax-script" async
    src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>

  <!-- Markdown parser -->
  <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
</head>
<body>

  <div class="container my-5">
    <h2>Resultados del Cuestionario</h2>
    <div id="resultsList" class="mt-4"></div>
    <a href="/" class="btn btn-primary mt-4">Volver al inicio</a>
  </div>

  <!-- Modal de SoluciÃ³n -->
  <div class="modal fade" id="solutionModal" tabindex="-1" aria-labelledby="solutionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="solutionModalLabel">SoluciÃ³n</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
        </div>
        <div class="modal-body" id="solutionContent">
          <!-- AquÃ­ se inyecta la explicaciÃ³n -->
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    const userAnswers = JSON.parse(localStorage.getItem('respuestasUsuario')) || [];
    const resultsList = document.getElementById('resultsList');

    // âœ… FunciÃ³n final que renderiza bien MathJax + Markdown
    function renderExplicacion(rawText) {
      // Corrige doble barra (\\) a una barra (\) para MathJax
      rawText = rawText.replace(/\\\\/g, '\\');

      // Reemplaza [ ... ] con contenido LaTeX por \[ ... \]
      rawText = rawText.replace(/\[\s*(\\?.+?)\s*\]/gs, (match, contenido) => {
        return contenido.includes('\\') ? `\\[${contenido}\\]` : match;
      });

      // Reemplaza ( ... ) con contenido LaTeX por \( ... \)
      rawText = rawText.replace(/\(\s*([^)]+?)\s*\)/gs, (match, contenido) => {
        const trimmed = contenido.trim();
        return /\\|[=+\-*/^]|\\infty|\\cup|\\leq|\\geq/.test(trimmed)
          ? `\\(${trimmed}\\)` : `(${trimmed})`;
      });

      // Separar LaTeX del texto para aplicar markdown solo donde corresponde
      const latexBlockRegex = /(\\\[.*?\\\]|\\\(.*?\\\))/gs;
      const parts = rawText.split(latexBlockRegex);

      return parts.map(part => {
        if (part.match(latexBlockRegex)) {
          return part; // mantener LaTeX tal cual
        } else {
          return marked.parse(part); // aplicar Markdown al resto
        }
      }).join('');
    }

    if (userAnswers.length === 0) {
      resultsList.innerHTML = "<p>No se encontraron respuestas registradas.</p>";
    } else {
      userAnswers.forEach(answer => {
        const resultDiv = document.createElement('div');
        resultDiv.className = "result-item mb-3 p-3 border rounded";

        resultDiv.innerHTML = `
          <p><strong>Pregunta:</strong> ${answer.enunciado}</p>
          <p><strong>Tu respuesta:</strong> ${answer.respuestaSeleccionada}</p>
          <p><strong>${answer.esCorrecta
            ? "<span class='text-success'>Â¡Respuesta correcta! ðŸŽ‰</span>"
            : "<span class='text-danger'>Respuesta incorrecta.</span>"}</strong></p>
        `;

        if (!answer.esCorrecta) {
          const button = document.createElement("button");
          button.classList.add("btn", "btn-primary", "mt-2");
          button.textContent = "Mostrar explicaciÃ³n";
          button.dataset.bsToggle = "modal";
          button.dataset.bsTarget = "#solutionModal";

          button.addEventListener("click", () => {
            const modalTitle = document.getElementById("solutionModalLabel");
            const modalContent = document.getElementById("solutionContent");

            modalTitle.innerText = "ExplicaciÃ³n de la pregunta";

            const explicacionHTML = renderExplicacion(answer.explicacion || "No hay explicaciÃ³n disponible.");

            modalContent.innerHTML = `
              <p><strong>Tu respuesta:</strong> ${answer.respuestaSeleccionada}</p>
              <p><strong>Respuesta correcta:</strong> ${answer.respuestaCorrecta}</p>
              <hr>
              ${explicacionHTML}
            `;

            MathJax.typesetPromise([modalContent]);
          });

          resultDiv.appendChild(button);
        }

        resultsList.appendChild(resultDiv);
      });

      MathJax.typesetPromise([resultsList]);
    }

    // Limpiar almacenamiento local despuÃ©s de mostrar resultados
    localStorage.removeItem('respuestasUsuario');
  </script>

</body>
</html>
