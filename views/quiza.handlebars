<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cuestionario de Álgebra</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="style.css" rel="stylesheet" type="text/css" />
    <script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
    <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
</head>
<body>

    <div class="container my-5">
        <h2 class="text-center" id="questionTitle">Pregunta</h2>
        <form id="quizForm">
            <div id="answers" class="mt-4">
                <!-- Las respuestas se generarán aquí con JavaScript -->
            </div>
            <button type="submit" class="btn btn-primary mt-3">Enviar</button>
        </form>
        <button id="hintButton" class="btn btn-info mt-3">Obtener una pista</button>
        <div id="hint" class="mt-3 text-success"></div>
        <div id="questionIndex"></div>
    </div>

    <!-- Incluir Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Obtener la categoría seleccionada desde localStorage
        const categoria = localStorage.getItem('selectedCategory');

        if (!categoria) {
            alert('No has seleccionado una categoría.');
            window.location.href = 'index.html'; // Redirigir al inicio si no hay categoría seleccionada
        }

        // Banco de preguntas
        const preguntas = {
            "Conjuntos Básicos": [
                { 
                    "pregunta": "Si \\( A = \\{1, 2, 3, 4\\} \\) y \\( B = \\{3, 4, 5, 6\\} \\), ¿cuál es \\( A \\cup B \\)?", 
                    "correcta": "\\{1, 2, 3, 4, 5, 6\\}", 
                    "incorrectas": ["\\{3, 4\\}", "\\{1, 2\\}", "\\{1, 2, 5, 6\\}"] 
                },
                { 
                    "pregunta": "¿Cuál es el conjunto complementario de \\( A = \\{1, 2, 3\\} \\) en el conjunto universal \\( U = \\{1, 2, 3, 4, 5\\} \\)?", 
                    "correcta": "\\{4, 5\\}", 
                    "incorrectas": ["\\{1, 2, 3\\}", "\\{4\\}", "\\{1, 2\\}"] 
                }
            ],
            "Vectores": [
                { 
                    "pregunta": "Dado un vector \\( \\mathbf{v} = (2, 3) \\) y otro vector \\( \\mathbf{w} = (4, -1) \\), ¿cuál es el producto escalar \\( \\mathbf{v} \\cdot \\mathbf{w} \\)?", 
                    "correcta": "5", 
                    "incorrectas": ["2", "0", "10"] 
                },
                { 
                    "pregunta": "¿Cuál es la magnitud del vector \\( \\mathbf{v} = (3, 4) \\)?", 
                    "correcta": "5", 
                    "incorrectas": ["7", "12", "9"] 
                }
            ],
            "Matrices": [
                { 
                    "pregunta": "Dadas las matrices \\( A = \\begin{pmatrix} 1 & 2 \\\\ 3 & 4 \\end{pmatrix} \\) y \\( B = \\begin{pmatrix} 5 & 6 \\\\ 7 & 8 \\end{pmatrix} \\), ¿cuál es la suma \\( A + B \\)?", 
                    "correcta": "\\begin{pmatrix} 6 & 8 \\\\ 10 & 12 \\end{pmatrix}", 
                    "incorrectas": ["\\begin{pmatrix} 5 & 6 \\\\ 7 & 8 \\end{pmatrix}", "\\begin{pmatrix} 2 & 4 \\\\ 6 & 8 \\end{pmatrix}", "\\begin{pmatrix} 1 & 2 \\\\ 3 & 4 \\end{pmatrix}"] 
                }
            ],
            "Polinomios": [
                { 
                    "pregunta": "¿Cuál es el resultado de \\( (x+2)(x+3) \\)?", 
                    "correcta": "x^2 + 5x + 6", 
                    "incorrectas": ["x^2 + 6x + 5", "x^2 + 4x + 6", "x^2 + 5x + 4"] 
                }
            ],
            "Determinantes": [
                { 
                    "pregunta": "Dada la matriz \\( A = \\begin{pmatrix} 2 & 1 \\\\ 3 & 4 \\end{pmatrix} \\), ¿cuál es su determinante?", 
                    "correcta": "5", 
                    "incorrectas": ["7", "10", "4"] 
                }
            ]
        };

        // Seleccionar 5 preguntas aleatorias de la categoría
        const preguntasCategoria = preguntas[categoria];
        let preguntasSeleccionadas = [];

        while (preguntasSeleccionadas.length < 5 && preguntasCategoria.length > 0) {
            const preguntaAleatoria = preguntasCategoria.splice(Math.floor(Math.random() * preguntasCategoria.length), 1)[0];
            preguntasSeleccionadas.push(preguntaAleatoria);
        }

        let currentQuestionIndex = 0;
        let userAnswers = [];

        function mostrarPregunta() {
            const preguntaSeleccionada = preguntasSeleccionadas[currentQuestionIndex];
            document.getElementById('questionTitle').textContent = preguntaSeleccionada.pregunta;

            // Crear respuestas aleatorias
            const respuestas = [preguntaSeleccionada.correcta, ...preguntaSeleccionada.incorrectas];
            respuestas.sort(() => Math.random() - 0.5); // Mezclar respuestas

            const answersDiv = document.getElementById('answers');
            answersDiv.innerHTML = ''; // Limpiar respuestas anteriores
            respuestas.forEach(respuesta => {
                const button = document.createElement('button');
                button.className = "btn btn-outline-primary form-check-input mb-2"; // Estilo del botón
                button.textContent = `\\(${respuesta}\\)`; // Usar etiquetas TeX para las respuestas
                button.onclick = function() {
                    document.querySelectorAll('#answers button').forEach(btn => btn.disabled = true); // Deshabilitar botones
                    button.classList.add('active'); // Marcar la respuesta seleccionada
                    selectedAnswer = respuesta; // Guardar respuesta seleccionada
                };
                answersDiv.appendChild(button);
            });

            document.getElementById('questionIndex').textContent = `Pregunta ${currentQuestionIndex + 1} de ${preguntasSeleccionadas.length}`;

            // Forzar el renderizado de MathJax para las nuevas alternativas
            MathJax.typesetPromise().then(() => {
                console.log("MathJax ha renderizado las ecuaciones.");
            }).catch((err) => console.log("Error al renderizar MathJax: ", err));
        }

        // Manejar el envío del formulario
        document.getElementById('quizForm').addEventListener('submit', function(e) {
            e.preventDefault();
            if (!selectedAnswer) {
                alert('Por favor, selecciona una respuesta.');
                return;
            }
            const isCorrect = selectedAnswer === preguntasSeleccionadas[currentQuestionIndex].correcta;
            userAnswers.push({
                pregunta: preguntasSeleccionadas[currentQuestionIndex].pregunta,
                respuestaSeleccionada: selectedAnswer,
                esCorrecto: isCorrect
            });

            // Ir a la siguiente pregunta o mostrar resultados
            currentQuestionIndex++;
            if (currentQuestionIndex < preguntasSeleccionadas.length) {
                mostrarPregunta();
            } else {
                // Redirigir a la página de resultados
                localStorage.setItem('userAnswers', JSON.stringify(userAnswers));
                window.location.href = "/result";
            }
        });

        // Obtener pista desde el backend usando ChatGPT
        document.getElementById('hintButton').addEventListener('click', function() {
            const preguntaSeleccionada = preguntasSeleccionadas[currentQuestionIndex].pregunta;

            fetch('http://quiz/pista', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ pregunta: preguntaSeleccionada }),
            })
            .then(response => response.json())
            .then(data => {
                document.getElementById('hint').textContent = `Pista: ${data.pista}`;
            })
            .catch(error => {
                console.error('Error al obtener la pista:', error);
                alert('Hubo un error al obtener la pista.');
            });
        });

        // Mostrar la primera pregunta al cargar
        mostrarPregunta();
    </script>
</body>
</html>
